---
// src/layouts/Layout.astro
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Votre guide complet pour naviguer et profiter pleinement de l'expérience Capitalyx" } = Astro.props;

// Détecter la langue basée sur l'URL
const currentPath = Astro.url.pathname;
const lang = currentPath.startsWith('/en/') ? 'en' : currentPath.startsWith('/es/') ? 'es' : 'fr';
const langPrefix = lang === 'fr' ? '' : `/${lang}`;
---

<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="icon" type="image/x-icon" href="favicon.ico" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <script src="/js/search-data.js" is:inline></script>
  </head>
  <body>
    <!-- Header -->
    <header class="header">
      <nav class="navbar">
        <div class="nav-container">
          <div class="hamburger">
            <span class="bar"></span>
            <span class="bar"></span>
            <span class="bar"></span>
          </div>
          <div class="nav-logo">
            <img src="/assets/img/logo.png" alt="Capitalyx Logo" class="logo" />
            <span class="logo-text">Capitalyx</span>
          </div>
          <ul class="nav-menu">
            <li class="nav-item">
              <a href={`${langPrefix}/`} class="nav-link">
                {lang === 'en' ? 'Home' : lang === 'es' ? 'Inicio' : 'Accueil'}
              </a>
            </li>
            <li class="nav-item">
              <a href={`${langPrefix}/rules`} class="nav-link">
                {lang === 'en' ? 'Rules' : lang === 'es' ? 'Reglas' : 'Règlement'}
              </a>
            </li>
            <li class="nav-item">
              <a href={`${langPrefix}/guides`} class="nav-link">
                {lang === 'en' ? 'Guides' : lang === 'es' ? 'Guías' : 'Guides'}
              </a>
            </li>
            <li class="nav-item">
              <a href={`${langPrefix}/jobs`} class="nav-link">
                {lang === 'en' ? 'Jobs' : lang === 'es' ? 'Trabajos' : 'Métiers'}
              </a>
            </li>
            <li class="nav-item">
              <a href={`${langPrefix}/commands`} class="nav-link">
                {lang === 'en' ? 'Commands' : lang === 'es' ? 'Comandos' : 'Commandes'}
              </a>
            </li>
            <li class="nav-item">
              <a href={`${langPrefix}/faq`} class="nav-link">FAQ</a>
            </li>
          </ul>
          <!-- Bouton de recherche -->
          <div class="header-actions">
            <button class="search-btn" type="button" onclick="openSearchModal()" title="Rechercher (Ctrl+K)">
              <i class="fas fa-search"></i>
            </button>
            <!-- Language Selector -->
            <div class="language-selector">
              <button class="lang-btn" id="langBtn">
                <i class="fas fa-globe"></i>
                <span id="currentLang">{lang === 'en' ? 'EN' : lang === 'es' ? 'ES' : 'FR'}</span>
                <i class="fas fa-chevron-down"></i>
              </button>
              <div class="lang-dropdown" id="langDropdown">
                <a href="/" class="lang-option" data-lang="fr">
                  <img src="/assets/img/flags/france.png" alt="France" class="flag-img" />
                  {lang === 'en' ? 'French' : lang === 'es' ? 'Francés' : 'Français'}
                </a>
                <a href="/en/" class="lang-option" data-lang="en">
                  <img src="/assets/img/flags/usuk.png" alt="English" class="flag-img" />
                  {lang === 'en' ? 'English' : lang === 'es' ? 'Inglés' : 'Anglais'}
                </a>
                <a href="/es/" class="lang-option" data-lang="es">
                  <img src="/assets/img/flags/spain.png" alt="Espagnol" class="flag-img" />
                  {lang === 'en' ? 'Spanish' : lang === 'es' ? 'Español' : 'Espagnol'}
                </a>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <!-- Main Content -->
    <main class="main-content">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="footer">
      <div class="container">
        <div class="footer-content">
          <div class="footer-section">
            <div class="footer-logo">
              <img src="/assets/img/logo.png" alt="Capitalyx Logo" class="footer-logo-img" height="50" />
              <span class="footer-logo-text">Capitalyx</span>
            </div>
            <p class="footer-description">
              Votre wiki complet pour maîtriser l'expérience Capitalyx et développer votre empire commercial.
            </p>
          </div>

          <div class="footer-section">
            <h4 class="footer-title">{lang === 'en' ? 'Navigation' : lang === 'es' ? 'Navegación' : 'Navigation'}</h4>
            <ul class="footer-links">
              <li><a href={`${langPrefix}/`} class="footer-link">{lang === 'en' ? 'Home' : lang === 'es' ? 'Inicio' : 'Accueil'}</a></li>
              <li><a href={`${langPrefix}/rules`} class="footer-link">{lang === 'en' ? 'Rules' : lang === 'es' ? 'Reglas' : 'Règlement'}</a></li>
              <li><a href={`${langPrefix}/guides`} class="footer-link">{lang === 'en' ? 'Guides' : lang === 'es' ? 'Guías' : 'Guides'}</a></li>
              <li><a href={`${langPrefix}/jobs`} class="footer-link">{lang === 'en' ? 'Jobs' : lang === 'es' ? 'Trabajos' : 'Métiers'}</a></li>
            </ul>
          </div>

          <div class="footer-section">
            <h4 class="footer-title">{lang === 'en' ? 'Resources' : lang === 'es' ? 'Recursos' : 'Ressources'}</h4>
            <ul class="footer-links">
              <li><a href={`${langPrefix}/commands`} class="footer-link">{lang === 'en' ? 'Commands' : lang === 'es' ? 'Comandos' : 'Commandes'}</a></li>
              <li><a href={`${langPrefix}/faq`} class="footer-link">FAQ</a></li>
              <li><a href="#" class="footer-link">Discord</a></li>
              <li><a href="#" class="footer-link">{lang === 'en' ? 'Forum' : lang === 'es' ? 'Foro' : 'Forum'}</a></li>
            </ul>
          </div>

          <div class="footer-section">
            <h4 class="footer-title">{lang === 'en' ? 'Languages' : lang === 'es' ? 'Idiomas' : 'Langues'}</h4>
            <ul class="footer-links">
              <li><a href="/" class="footer-link">{lang === 'en' ? 'French' : lang === 'es' ? 'Francés' : 'Français'}</a></li>
              <li><a href="/en/" class="footer-link">{lang === 'en' ? 'English' : lang === 'es' ? 'Inglés' : 'Anglais'}</a></li>
              <li><a href="/es/" class="footer-link">{lang === 'en' ? 'Spanish' : lang === 'es' ? 'Español' : 'Espagnol'}</a></li>
            </ul>
          </div>
        </div>

        <div class="footer-bottom">
          <p class="footer-copyright">
            © 2025 Capitalyx. Tous droits réservés.
          </p>
          <p>
            Made by Arkyan & SmashBalloon
          </p>
        </div>
        </div>
      </div>
    </footer>

    <!-- Search Modal -->
    <div class="search-modal" id="searchModal">
      <div class="search-modal-backdrop" onclick="closeSearchModal()"></div>
      <div class="search-modal-content">
        <div class="search-modal-header">
          <h3>Rechercher dans le wiki</h3>
          <button class="search-modal-close" onclick="closeSearchModal()" aria-label="Fermer la recherche" title="Fermer la recherche">
            <i class="fas fa-times"></i>
          </button>
        </div>

        <div class="search-container">
          <!-- Filtres de recherche -->
          <div class="search-filters">
            <button class="filter-btn active" data-filter="all">Tout</button>
            <button class="filter-btn" data-filter="rules">Règlement</button>
            <button class="filter-btn" data-filter="guides">Guides</button>
            <button class="filter-btn" data-filter="jobs">Métiers</button>
            <button class="filter-btn" data-filter="commands">Commandes</button>
            <button class="filter-btn" data-filter="faq">FAQ</button>
          </div>

          <!-- Barre de recherche -->
          <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text" class="search-input" placeholder="Rechercher dans le wiki... (ex: règles métier, commandes, etc.)" id="searchInput" />
            <button class="search-clear" id="searchClear" title="Effacer la recherche" aria-label="Effacer la recherche">
              <i class="fas fa-times"></i>
            </button>
          </div>

          <!-- R�sultats de recherche -->
          <div class="search-results" id="searchResults"></div>
        </div>

        <!-- Raccourcis clavier -->
        <div class="search-shortcuts">
          <span class="shortcut"><kbd>↑</kbd><kbd>↓</kbd> pour naviguer</span>
          <span class="shortcut"><kbd>Enter</kbd> pour sélectionner</span>
          <span class="shortcut"><kbd>Esc</kbd> pour fermer</span>
        </div>
      </div>
    </div>

<style>
  @import url('../styles/root.css');

  /* Styles supplémentaires pour s'assurer que la modal fonctionne */
  .search-modal {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    z-index: 999999 !important;
    opacity: 0 !important;
    visibility: hidden !important;
    display: none !important;
    transition: all 0.3s ease !important;
    background: rgba(0, 0, 0, 0.8) !important;
    backdrop-filter: blur(10px) !important;
  }

  .search-modal.open {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
  }

  /* Styles pour les résultats de recherche avec spécificité élevée */
  .search-modal .search-results {
    max-height: 450px !important;
    overflow-y: auto !important;
    margin-top: 1rem !important;
    border-radius: 12px !important;
    background: rgba(255, 255, 255, 0.02) !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    backdrop-filter: blur(10px) !important;
  }

  .search-modal .search-results::-webkit-scrollbar {
    width: 6px !important;
  }

  .search-modal .search-results::-webkit-scrollbar-track {
    background: transparent !important;
  }

  .search-modal .search-results::-webkit-scrollbar-thumb {
    background: rgba(220, 38, 38, 0.3) !important;
    border-radius: 3px !important;
  }

  .search-modal .search-results::-webkit-scrollbar-thumb:hover {
    background: rgba(220, 38, 38, 0.5) !important;
  }

  .search-modal .search-result-item {
    position: relative !important;
    padding: 1.25rem 1.5rem !important;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05) !important;
    cursor: pointer !important;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
    display: flex !important;
    flex-direction: column !important;
    gap: 0.5rem !important;
    overflow: hidden !important;
  }

  .search-modal .search-result-item:last-child {
    border-bottom: none !important;
  }

  .search-modal .search-result-item::before {
    content: '' !important;
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    width: 3px !important;
    height: 100% !important;
    background: var(--primary-color) !important;
    transform: scaleY(0) !important;
    transition: transform 0.3s ease !important;
  }

  .search-modal .search-result-item:hover,
  .search-modal .search-result-item.selected {
    background: linear-gradient(135deg,
        rgba(220, 38, 38, 0.08) 0%,
        rgba(220, 38, 38, 0.12) 100%) !important;
    transform: translateX(4px) !important;
    box-shadow: 0 4px 20px rgba(220, 38, 38, 0.15) !important;
  }

  .search-modal .search-result-item:hover::before,
  .search-modal .search-result-item.selected::before {
    transform: scaleY(1) !important;
  }

  .search-modal .result-header {
    display: flex !important;
    align-items: center !important;
    gap: 0.75rem !important;
    margin-bottom: 0.5rem !important;
  }

  .search-modal .result-category {
    font-size: 0.7rem !important;
    color: #dc2626 !important;
    font-weight: 700 !important;
    text-transform: uppercase !important;
    letter-spacing: 0.5px !important;
    background: rgba(220, 38, 38, 0.15) !important;
    padding: 0.25rem 0.6rem !important;
    border-radius: 20px !important;
    border: 1px solid rgba(220, 38, 38, 0.2) !important;
    flex-shrink: 0 !important;
    display: inline-block !important;
  }

  .search-modal .result-icon {
    width: 16px !important;
    height: 16px !important;
    opacity: 0.6 !important;
    color: #dc2626 !important;
    margin-right: 0.5rem !important;
  }

  .search-modal .result-title {
    font-size: 1.05rem !important;
    font-weight: 600 !important;
    color: #f5f5f5 !important;
    margin: 0 !important;
    line-height: 1.3 !important;
    display: flex !important;
    align-items: center !important;
    gap: 0.5rem !important;
  }

  .search-modal .result-description {
    font-size: 0.85rem !important;
    color: #d1d5db !important;
    line-height: 1.5 !important;
    margin: 0 !important;
    opacity: 0.8 !important;
  }

  .search-modal .result-highlight {
    background: linear-gradient(135deg,
        rgba(220, 38, 38, 0.25) 0%,
        rgba(251, 191, 36, 0.25) 100%) !important;
    color: var(--primary-color) !important;
    font-weight: 700 !important;
    padding: 0.15rem 0.35rem !important;
    border-radius: 6px !important;
    box-shadow: 0 2px 4px rgba(220, 38, 38, 0.1) !important;
    border: 1px solid rgba(220, 38, 38, 0.2) !important;
  }

  .search-modal .no-results {
    text-align: center !important;
    padding: 4rem 2rem !important;
    color: var(--text-secondary) !important;
    background: rgba(255, 255, 255, 0.02) !important;
    border-radius: 12px !important;
    margin-top: 1rem !important;
  }

  .search-modal .no-results i {
    font-size: 3.5rem !important;
    margin-bottom: 1.5rem !important;
    opacity: 0.4 !important;
    color: var(--primary-color) !important;
    background: linear-gradient(135deg, var(--primary-color), #fbbf24) !important;
    -webkit-background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    background-clip: text !important;
  }

  .search-modal .no-results p {
    font-size: 1.2rem !important;
    margin-bottom: 0.75rem !important;
    font-weight: 600 !important;
  }

  .search-modal .no-results small {
    font-size: 0.9rem !important;
    opacity: 0.6 !important;
    display: block !important;
    margin-top: 0.5rem !important;
  }

  /* Animation d'apparition des résultats */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .search-modal .search-result-item {
    animation: slideInUp 0.3s ease forwards !important;
  }

  .search-modal .search-result-item:nth-child(1) { animation-delay: 0.05s !important; }
  .search-modal .search-result-item:nth-child(2) { animation-delay: 0.1s !important; }
  .search-modal .search-result-item:nth-child(3) { animation-delay: 0.15s !important; }
  .search-modal .search-result-item:nth-child(4) { animation-delay: 0.2s !important; }
  .search-modal .search-result-item:nth-child(5) { animation-delay: 0.25s !important; }

  /* Debug styles temporaires */
  .search-modal .result-category {
    background: red !important;
    color: white !important;
    border: 2px solid yellow !important;
  }

  .search-modal .result-icon {
    color: lime !important;
    font-size: 20px !important;
  }

  /* Footer logo text centrage uniquement */
  .footer-logo {
    display: flex;
    align-items: center;
  }
  .footer-logo-text {
    font-size: 1.5em;
  }

</style>

    <script>
      // Fonctions pour la recherche
      function openSearchModal() {
        console.log('openSearchModal() appelée');
        const modal = document.getElementById('searchModal');
        console.log('Modal trouvée:', modal);
        if (modal) {
          console.log('Ajout de la classe open...');
          modal.classList.add('open');
          document.body.style.overflow = 'hidden';
          console.log('Modal classes après ajout:', modal.classList.toString());
          console.log('Modal computed style display:', window.getComputedStyle(modal).display);
          console.log('Modal computed style opacity:', window.getComputedStyle(modal).opacity);
          console.log('Modal computed style visibility:', window.getComputedStyle(modal).visibility);
          setTimeout(() => {
            const searchInput = document.getElementById('searchInput');
            if (searchInput) searchInput.focus();
          }, 100);
        } else {
          console.error('Modal de recherche non trouvée !');
        }
      }

      function closeSearchModal() {
        console.log('closeSearchModal() appelée');
        const modal = document.getElementById('searchModal');
        console.log('Modal trouvée pour fermeture:', modal);
        if (modal) {
          console.log('Suppression de la classe open...');
          modal.classList.remove('open');
          document.body.style.overflow = '';
          console.log('Modal classes après suppression:', modal.classList.toString());
          console.log('Modal computed style après fermeture display:', window.getComputedStyle(modal).display);
          console.log('Modal computed style après fermeture opacity:', window.getComputedStyle(modal).opacity);
        } else {
          console.error('Modal de recherche non trouvée pour fermeture !');
        }
      }

      // Variables globales pour la recherche
      let currentFilter = 'all';
      let selectedIndex = -1;

      // Fonction de recherche
      function performSearch(query : any) {
        if (!query || query.length < 2) return [];

        query = query.toLowerCase();

        // Filtrer les résultats selon la catégorie active
        let results = window.searchData.filter(item => {
          if (currentFilter !== 'all' && item.category !== currentFilter) {
            return false;
          }

          // Recherche dans le titre, description et mots-clés
          const searchText = (
            item.title + ' ' +
            item.description + ' ' +
            item.keywords.join(' ')
          ).toLowerCase();

          return searchText.includes(query);
        });

        // Trier par pertinence (titre > description > mots-clés)
        return results.sort((a, b) => {
          const aTitle = a.title.toLowerCase().includes(query) ? 3 : 0;
          const aDesc = a.description.toLowerCase().includes(query) ? 2 : 0;
          const aKeywords = a.keywords.some(k => k.toLowerCase().includes(query)) ? 1 : 0;

          const bTitle = b.title.toLowerCase().includes(query) ? 3 : 0;
          const bDesc = b.description.toLowerCase().includes(query) ? 2 : 0;
          const bKeywords = b.keywords.some(k => k.toLowerCase().includes(query)) ? 1 : 0;

          return (bTitle + bDesc + bKeywords) - (aTitle + aDesc + aKeywords);
        });
      }

      // Fonction pour mettre en évidence le texte de recherche
      function highlightText(text, query) {
        if (!query) return text;
        const regex = new RegExp(`(${query})`, 'gi');
        return text.replace(regex, '<span style="background: linear-gradient(135deg, rgba(220, 38, 38, 0.25) 0%, rgba(251, 191, 36, 0.25) 100%); color: #dc2626; font-weight: 700; padding: 0.15rem 0.35rem; border-radius: 6px; box-shadow: 0 2px 4px rgba(220, 38, 38, 0.1); border: 1px solid rgba(220, 38, 38, 0.2);">$1</span>');
      }

      // Fonction pour afficher les résultats
      function displayResults(results, query) {
        const searchResults = document.getElementById('searchResults');
        selectedIndex = -1; // Reset selection

        if (results.length === 0) {
          searchResults.innerHTML = `
            <div class="no-results">
              <i class="fas fa-search"></i>
              <p>Aucun résultat trouvé pour "${query}"</p>
              <small>Essayez avec des mots-clés différents</small>
            </div>
          `;
          return;
        }

        const html = results.map((result, index) => {
          const highlightedTitle = highlightText(result.title, query);
          const highlightedDesc = highlightText(result.description, query);
          const categoryName = window.getCategoryName(result.category);

          // Icône selon la catégorie
          const categoryIcons = {
            'rules': 'fas fa-gavel',
            'guides': 'fas fa-book-open',
            'jobs': 'fas fa-briefcase',
            'commands': 'fas fa-terminal',
            'faq': 'fas fa-question-circle'
          };
          const icon = categoryIcons[result.category] || 'fas fa-file-alt';

          return `
            <div class="search-result-item" data-index="${index}" data-url="${result.url}"
                 style="position: relative; padding: 1.25rem 1.5rem; border-bottom: 1px solid rgba(255, 255, 255, 0.05); cursor: pointer; transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); display: flex; flex-direction: column; gap: 0.5rem; overflow: hidden;">
              <div class="result-header" style="display: flex; align-items: center; gap: 0.75rem; margin-bottom: 0.5rem;">
                <span class="result-category" style="font-size: 0.7rem; color: #dc2626; font-weight: 700; text-transform: uppercase; letter-spacing: 0.5px; background: rgba(220, 38, 38, 0.15); padding: 0.25rem 0.6rem; border-radius: 20px; border: 1px solid rgba(220, 38, 38, 0.2); flex-shrink: 0; display: inline-block;">${categoryName}</span>
              </div>
              <div class="result-title" style="font-size: 1.05rem; font-weight: 600; color: #f5f5f5; margin: 0; line-height: 1.3; display: flex; align-items: center; gap: 0.5rem;">
                <i class="${icon} result-icon" style="width: 16px; height: 16px; opacity: 0.6; color: #dc2626; margin-right: 0.5rem; font-size: 16px;"></i>
                ${highlightedTitle}
              </div>
              <div class="result-description" style="font-size: 0.85rem; color: #d1d5db; line-height: 1.5; margin: 0; opacity: 0.8;">${highlightedDesc}</div>
            </div>
          `;
        }).join('');

        searchResults.innerHTML = html;

        // Ajouter les événements de clic et hover
        searchResults.querySelectorAll('.search-result-item').forEach(item => {
          item.addEventListener('click', () => {
            window.location.href = item.dataset.url;
          });

          // Effets de hover
          item.addEventListener('mouseenter', () => {
            item.style.background = 'linear-gradient(135deg, rgba(220, 38, 38, 0.08) 0%, rgba(220, 38, 38, 0.12) 100%)';
            item.style.transform = 'translateX(4px)';
            item.style.boxShadow = '0 4px 20px rgba(220, 38, 38, 0.15)';
          });

          item.addEventListener('mouseleave', () => {
            if (!item.classList.contains('selected')) {
              item.style.background = '';
              item.style.transform = '';
              item.style.boxShadow = '';
            }
          });
        });

        // Montrer les résultats
        searchResults.style.display = 'block';
      }

      // Fonction pour gérer la navigation au clavier
      function navigateResults(direction) {
        const items = document.querySelectorAll('.search-result-item');
        if (items.length === 0) return;

        // Supprimer la sélection actuelle
        if (selectedIndex >= 0) {
          items[selectedIndex].classList.remove('selected');
        }

        // Mettre à jour l'index
        selectedIndex += direction;

        // Gérer le bouclage
        if (selectedIndex >= items.length) {
          selectedIndex = 0;
        } else if (selectedIndex < 0) {
          selectedIndex = items.length - 1;
        }

        // Ajouter la nouvelle sélection
        items[selectedIndex].classList.add('selected');

        // Faire défiler vers l'élément sélectionné
        items[selectedIndex].scrollIntoView({
          block: 'nearest',
          behavior: 'smooth'
        });
      }

      // Fonction pour sélectionner un résultat
      function selectResult() {
        const items = document.querySelectorAll('.search-result-item');
        if (selectedIndex >= 0 && items[selectedIndex]) {
          const url = items[selectedIndex].dataset.url;
          window.location.href = url;
        }
      }

      // Navigation mobile
      document.addEventListener('DOMContentLoaded', function() {
        const hamburger = document.querySelector('.hamburger');
        const navMenu = document.querySelector('.nav-menu');

        if (hamburger && navMenu) {
          hamburger.addEventListener('click', function() {
            hamburger.classList.toggle('active');
            navMenu.classList.toggle('active');
          });

          // Fermer le menu mobile lors du clic sur un lien
          document.querySelectorAll('.nav-link').forEach(n => n.addEventListener('click', () => {
            hamburger.classList.remove('active');
            navMenu.classList.remove('active');
          }));
        }

        // Ajouter un gestionnaire d'événement pour le bouton de recherche
        const searchBtn = document.querySelector('.search-btn');
        console.log('Bouton de recherche trouvé:', searchBtn);
        if (searchBtn) {
          searchBtn.addEventListener('click', function(e) {
            console.log('Bouton de recherche cliqué (addEventListener)');
            e.preventDefault();
            openSearchModal();
          });
        }

        // Ajouter des gestionnaires d'événement pour fermer la modal
        const closeBtn = document.querySelector('.search-modal-close');
        const backdrop = document.querySelector('.search-modal-backdrop');

        console.log('Bouton de fermeture trouvé:', closeBtn);
        console.log('Backdrop trouvé:', backdrop);

        if (closeBtn) {
          closeBtn.addEventListener('click', function(e) {
            console.log('Bouton de fermeture cliqué (addEventListener)');
            e.preventDefault();
            closeSearchModal();
          });
        }

        if (backdrop) {
          backdrop.addEventListener('click', function(e) {
            console.log('Backdrop cliqué (addEventListener)');
            e.preventDefault();
            closeSearchModal();
          });
        }

        // Gestionnaires d'événement pour la recherche
        const searchInput = document.getElementById('searchInput');
        const searchClear = document.getElementById('searchClear');
        const filterBtns = document.querySelectorAll('.filter-btn');

        console.log('Éléments de recherche trouvés:');
        console.log('- Input:', searchInput);
        console.log('- Clear:', searchClear);
        console.log('- Filtres:', filterBtns);

        // Événement de saisie dans la barre de recherche
        if (searchInput) {
          searchInput.addEventListener('input', function(e) {
            const query = e.target.value.trim();
            console.log('Recherche pour:', query);

            if (query.length >= 2) {
              const results = performSearch(query);
              console.log('Résultats trouvés:', results.length);
              displayResults(results, query);

              // Montrer le bouton clear
              if (searchClear) {
                searchClear.style.display = 'block';
              }
            } else {
              // Cacher les résultats si moins de 2 caractères
              const searchResults = document.getElementById('searchResults');
              if (searchResults) {
                searchResults.style.display = 'none';
              }

              // Cacher le bouton clear
              if (searchClear) {
                searchClear.style.display = 'none';
              }
            }
          });
        }

        // Bouton pour effacer la recherche
        if (searchClear) {
          searchClear.addEventListener('click', function() {
            console.log('Clear search clicked');
            if (searchInput) {
              searchInput.value = '';
              searchInput.focus();
            }

            const searchResults = document.getElementById('searchResults');
            if (searchResults) {
              searchResults.style.display = 'none';
            }

            searchClear.style.display = 'none';
          });
        }

        // Gestionnaires pour les boutons de filtre
        filterBtns.forEach(btn => {
          btn.addEventListener('click', function() {
            console.log('Filtre sélectionné:', this.dataset.filter);

            // Mettre à jour le filtre actuel
            currentFilter = this.dataset.filter;

            // Mettre à jour l'interface des boutons
            filterBtns.forEach(b => b.classList.remove('active'));
            this.classList.add('active');

            // Relancer la recherche si il y a du texte
            if (searchInput && searchInput.value.trim().length >= 2) {
              const results = performSearch(searchInput.value.trim());
              displayResults(results, searchInput.value.trim());
            }
          });
        });

        // S�lecteur de langue
        const langBtn = document.getElementById('langBtn');
        const langDropdown = document.getElementById('langDropdown');

        if (langBtn && langDropdown) {
          langBtn.addEventListener('click', function() {
            langDropdown.classList.toggle('show');
          });

          // Fermer le dropdown si on clique ailleurs
          document.addEventListener('click', function(event) {
            if (!langBtn.contains(event.target as Node) && !langDropdown.contains(event.target as Node)) {
              langDropdown.classList.remove('show');
            }
          });
        }

        // Raccourcis clavier
        document.addEventListener('keydown', function(e) {
          // Ctrl+K pour ouvrir la recherche
          if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
            console.log('Ctrl+K détecté');
            e.preventDefault();
            openSearchModal();
            return;
          }

          // Si la modal est ouverte
          const modal = document.getElementById('searchModal');
          const isModalOpen = modal && modal.classList.contains('open');

          if (isModalOpen) {
            // Escape pour fermer la recherche
            if (e.key === 'Escape') {
              console.log('Escape détecté');
              e.preventDefault();
              closeSearchModal();
              return;
            }

            // Navigation avec les flèches
            if (e.key === 'ArrowDown') {
              console.log('Flèche bas détectée');
              e.preventDefault();
              navigateResults(1);
              return;
            }

            if (e.key === 'ArrowUp') {
              console.log('Flèche haut détectée');
              e.preventDefault();
              navigateResults(-1);
              return;
            }

            // Enter pour sélectionner
            if (e.key === 'Enter') {
              console.log('Enter détecté');
              e.preventDefault();
              selectResult();
              return;
            }
          }
        });

        // Fonctions pour la table des matières (TOC)
        window.openTOCModal = function() {
          const modal = document.getElementById('tocModal');
          if (modal) {
            modal.classList.add('open');
            document.body.style.overflow = 'hidden';
          }
        };

        window.closeTOCModal = function() {
          const modal = document.getElementById('tocModal');
          if (modal) {
            modal.classList.remove('open');
            document.body.style.overflow = '';
          }
        };

        // Fermer la modal TOC si on clique sur le fond
        document.addEventListener('click', function(e) {
          const modal = document.getElementById('tocModal');
          if (modal && e.target === modal) {
            window.closeTOCModal();
          }
        });
      });
    </script>
  </body>
</html>